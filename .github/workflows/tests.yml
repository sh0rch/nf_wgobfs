name: Tests

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  linux:
    name: Linux / ${{ matrix.target }}
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            uses-cross: false
          - target: i686-unknown-linux-gnu
            uses-cross: true
          - target: mipsel-unknown-linux-gnu
            uses-cross: true
          - target: mips64el-unknown-linux-gnuabi64
            uses-cross: true
          - target: mips-unknown-linux-gnu
            uses-cross: true
          - target: mips64-unknown-linux-gnuabi64
            uses-cross: true
          - target: aarch64-unknown-linux-gnu
            uses-cross: true
    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: sudo apt-get update -qq && sudo apt-get install -y libnetfilter-queue-dev

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-

      - name: Enable QEMU (all arch)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Install Rust target
        if: matrix.uses-cross == false
        run: rustup target add ${{ matrix.target }}

      - name: Install cross
        if: matrix.uses-cross == true
        run: cargo install cross --git https://github.com/cross-rs/cross --tag v0.2.5

      - name: Install nightly toolchain
        if: matrix.uses-cross == true
        run: |
          rustup toolchain install nightly
          rustup component add rust-src --toolchain nightly

      - name: Read crate version
        id: ver
        run: |
          CRATE_VERSION=$(grep -m1 '^version' Cargo.toml | cut -d '"' -f2)
          echo "CRATE_VERSION=$CRATE_VERSION" >> $GITHUB_ENV
          echo "version=$CRATE_VERSION" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          if [ "${{ matrix.uses-cross }}" = "true" ]; then
            cross +nightly build --target ${{ matrix.target }} -Z build-std=std,core,alloc  --verbose
          else
            cargo build --target ${{ matrix.target }}  --verbose
          fi

      - name: Test
        run: |
          if [ "${{ matrix.uses-cross }}" = "true" ]; then
            cross +nightly test --target ${{ matrix.target }} -Z build-std=std,core,alloc --verbose -- --nocapture
          else
            cargo test --target ${{ matrix.target }} --verbose -- --nocapture
          fi
